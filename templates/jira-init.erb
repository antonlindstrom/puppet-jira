#! /bin/sh

### BEGIN INIT INFO
# Provides:          jira
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

. /lib/lsb/init-functions

NAME="jira"
JIRA_PATH="/opt/atlassian-jira-<%= scope.lookupvar('jira::version') %>-standalone"
START_SCRIPT="${JIRA_PATH}/bin/start-jira.sh"
STOP_SCRIPT="${JIRA_PATH}/bin/stop-jira.sh"
PIDFILE="${JIRA_PATH}/work/catalina.pid"
CWD=`pwd`

export JVM_MINIMUM_MEMORY="<%= scope.lookupvar('jira::minimum_memory') %>"
export JVM_MAXIMUM_MEMORY="<%= scope.lookupvar('jira::maximum_memory') %>"
export JIRA_MAX_PERM_SIZE="<%= scope.lookupvar('jira::permgen_size') %>"

export JVM_OPTS="<%= scope.lookupvar('jira::jvm_options') %>"
export JIRA_HOME="<%= scope.lookupvar('jira::params::home') %>"

start () {
        log_daemon_msg "Starting $NAME"
        if start-stop-daemon --start --quiet --user jira -d $JIRA_PATH --pidfile "$PIDFILE" --exec $START_SCRIPT; then
                log_end_msg 0
        else
                log_end_msg 1
        fi
}

stop () {
        log_daemon_msg "Stopping $NAME"
        if start-stop-daemon --stop --quiet --pidfile "$PIDFILE"; then
                log_end_msg 0
        else
                log_end_msg 1
        fi
}

status () {
        status_of_proc -p $PIDFILE "" "$NAME"
}

case $1 in
        start)
                if status; then exit 0; fi
                start
                ;;
        stop)
                stop
                ;;
        reload)
                stop
                sleep 2
                start
                ;;
        restart)
                stop
                sleep 2
                start
                ;;
        status)
                status && exit 0 || exit $?
                ;;
        *)
                echo "Usage: $0 {start|stop|restart|reload|status}"
                exit 1
                ;;
esac

exit 0
